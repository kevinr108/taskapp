[{"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\index.js":"1","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\App.js":"2","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\PendingContainer.js":"3","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\CompletedContainer.js":"4","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\Form.js":"5","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\Task.js":"6"},{"size":219,"mtime":1611953415183,"results":"7","hashOfConfig":"8"},{"size":3562,"mtime":1611961116872,"results":"9","hashOfConfig":"8"},{"size":593,"mtime":1611960805448,"results":"10","hashOfConfig":"8"},{"size":599,"mtime":1611960811778,"results":"11","hashOfConfig":"8"},{"size":2100,"mtime":1611952880347,"results":"12","hashOfConfig":"8"},{"size":1094,"mtime":1611958278141,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wbdzfl",{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\index.js",[],"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\App.js",["29","30","31","32","33","34"],"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\PendingContainer.js",[],["35","36"],"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\CompletedContainer.js",[],"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\Form.js",["37"],"import { useReducer, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst INITIAL_STATE = {\r\n  taskTitle: '',\r\n  priority: 'Undecided',\r\n  dueDate: new Date(),\r\n  isCompleted: false,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'updateFieldValue':\r\n      return { ...state, [action.field]: action.value };\r\n    case 'reset':\r\n    default:\r\n      return INITIAL_STATE;\r\n  }\r\n};\r\n\r\nfunction Form({ addTask }) {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\r\n\r\n  const updateFieldValue = (field) => (event) => {\r\n    dispatch({\r\n      type: 'updateFieldValue',\r\n      field,\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  const updateDueDate = (date) => {\r\n    console.log('updated dueDate', date);\r\n    dispatch({\r\n      type: 'updateFieldValue',\r\n      field: 'dueDate',\r\n      value: date,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch({ type: 'reset' });\r\n    addTask(state);\r\n  };\r\n\r\n  return (\r\n    // <div className='form-container'>\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Task\r\n        <input\r\n          type='text'\r\n          name='taskTitle'\r\n          value={state.taskTitle}\r\n          onChange={updateFieldValue('taskTitle')}\r\n        />\r\n      </label>\r\n      <label>\r\n        Priority\r\n        <select\r\n          id='priority'\r\n          name='priority'\r\n          value={state.priority}\r\n          onChange={updateFieldValue('priority')}\r\n        >\r\n          <option value='Undecided'>Undecided</option>\r\n          <option value='Low'>Low</option>\r\n          <option value='Medium'>Medium</option>\r\n          <option value='High'>High</option>\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Due Date\r\n        <DatePicker\r\n          selected={state.dueDate}\r\n          dateFormat='MMMM d, yyyy'\r\n          onChange={(date) => updateDueDate(date)}\r\n        />\r\n      </label>\r\n      <button>+</button>\r\n    </form>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\Task.js",["38","39"],"import Ellipse from '../imgs/Ellipse.png';\r\nimport Vectorgroup from '../imgs/Vectorgroup.png';\r\n\r\nfunction Task({\r\n  id,\r\n  dueDate,\r\n  isCompleted,\r\n  priority,\r\n  taskTitle,\r\n  markComplete,\r\n  deleteTask,\r\n}) {\r\n  return (\r\n    // <div>Tasks</div>\r\n    <div className='task-item-border'>\r\n      <div className='task-top'>\r\n        <div className='task-top-left'>\r\n          <input\r\n            type='checkbox'\r\n            checked={isCompleted}\r\n            onChange={() => markComplete(id)}\r\n          />\r\n          <p>{taskTitle}</p>\r\n        </div>\r\n        <div className='task-top-right'>\r\n          <button className='del-button' onClick={() => deleteTask(id)}>\r\n            X\r\n          </button>\r\n          <p className='duedate'>{dueDate}</p>\r\n          <img className='vector-group' src={Vectorgroup} />\r\n        </div>\r\n      </div>\r\n      <div className='priority-container'>\r\n        <p className='priority-low'>Low</p>\r\n        <p className='priority-medium'>Medium</p>\r\n        <p className='priority-high'>High</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n",{"ruleId":"40","severity":1,"message":"41","line":46,"column":14,"nodeType":"42","messageId":"43","endLine":46,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":57,"column":49,"nodeType":"42","messageId":"43","endLine":57,"endColumn":51},{"ruleId":"45","severity":1,"message":"46","line":65,"column":7,"nodeType":"47","endLine":65,"endColumn":54},{"ruleId":"45","severity":1,"message":"46","line":66,"column":7,"nodeType":"47","endLine":66,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":82,"column":9,"nodeType":"47","endLine":86,"endColumn":10},{"ruleId":"48","severity":1,"message":"49","line":89,"column":9,"nodeType":"47","endLine":93,"endColumn":10},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":22,"nodeType":"56","messageId":"57","endLine":1,"endColumn":30},{"ruleId":"54","severity":1,"message":"58","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":15},{"ruleId":"45","severity":1,"message":"46","line":30,"column":11,"nodeType":"47","endLine":30,"endColumn":61},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Ellipse' is defined but never used.","no-global-assign","no-unsafe-negation"]