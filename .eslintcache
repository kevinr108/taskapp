[{"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\index.js":"1","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\App.js":"2","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\PendingContainer.js":"3","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\CompletedContainer.js":"4","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\Form.js":"5","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\Task.js":"6"},{"size":219,"mtime":1611953415183,"results":"7","hashOfConfig":"8"},{"size":3562,"mtime":1611961116872,"results":"9","hashOfConfig":"8"},{"size":593,"mtime":1611960805448,"results":"10","hashOfConfig":"8"},{"size":599,"mtime":1611960811778,"results":"11","hashOfConfig":"8"},{"size":2130,"mtime":1611967165589,"results":"12","hashOfConfig":"8"},{"size":1253,"mtime":1611967043362,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1wbdzfl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\index.js",[],["28","29"],"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\App.js",["30","31","32","33","34","35"],"import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport PendingContainer from './components/PendingContainer';\nimport CompletedContainer from './components/CompletedContainer';\nimport Form from './components/Form';\nimport PinkVector from './imgs/PinkVector.png';\nimport BlueVector from './imgs/BlueVector.png';\n\nfunction App() {\n  // const date = moment().format('MMM Do YYYY');\n  const month = moment().format('MMMM');\n  const weekday = moment().format('dddd');\n  const date = moment().format('D');\n  const year = moment().format('YYYY');\n\n  const [tasks, setTasks] = useState([]);\n  const [numTasks, setNumTasks] = useState(0);\n  const [showPending, setShowPending] = useState(true);\n\n  useEffect(() => {\n    let sessionTasks = sessionStorage.getItem('tasksStorage');\n    if (!sessionTasks) return;\n    console.log('App useEffect ', sessionTasks);\n    sessionTasks = JSON.parse(sessionTasks);\n    setTasks(sessionTasks);\n    setNumTasks(sessionTasks.filter((task) => !task.isCompleted).length);\n  }, []);\n\n  const addTask = (formState) => {\n    console.log('From App form state ', formState);\n    const id = uuidv4();\n    const formatState = {\n      ...formState,\n      dueDate: moment(formState.dueDate).format('MMM Do YYYY'),\n      id,\n    };\n    const newTasks = [...tasks, formatState];\n    sessionStorage.setItem('tasksStorage', JSON.stringify(newTasks));\n    setTasks(newTasks);\n    setNumTasks(newTasks.filter((task) => !task.isCompleted).length);\n  };\n\n  const markComplete = (id) => {\n    const temp = tasks.map((task) => {\n      if (id == task.id) {\n        return { ...task, isCompleted: !task.isCompleted };\n      }\n      return task;\n    });\n    sessionStorage.setItem('tasksStorage', JSON.stringify(temp));\n    setTasks(temp);\n    setNumTasks(temp.filter((task) => !task.isCompleted).length);\n  };\n\n  const deleteTask = (id) => {\n    const temp = tasks.filter((task) => task.id != id);\n    sessionStorage.setItem('tasksStorage', JSON.stringify(temp));\n    setTasks(temp);\n    setNumTasks(temp.filter((task) => !task.isCompleted).length);\n  };\n\n  return (\n    <div className='app-container'>\n      <img className='pinkvector' src={PinkVector} />\n      <img className='bluevector' src={BlueVector} />\n      <div className='date-pending-container'>\n        <div className='date-container'>\n          <p id='weekday'>{weekday}</p>\n          <p id='monthdate'>{`${month}, ${date}`}</p>\n          <p id='year'>{year}</p>\n        </div>\n        <div className='task-pendingcontainer'>\n          <p>\n            {' '}\n            <span id='num-task'>{numTasks}</span>\n            <span id='task'>Tasks</span>\n          </p>\n        </div>\n      </div>\n      <div className='nav-bar'>\n        <a\n          href='#'\n          className={showPending ? 'active' : ''}\n          onClick={() => setShowPending(true)}\n        >\n          Pending\n        </a>\n        <a\n          href='#'\n          className={!showPending ? 'active' : ''}\n          onClick={() => setShowPending(false)}\n        >\n          Completed\n        </a>\n      </div>\n      {showPending ? (\n        <PendingContainer\n          tasks={tasks.filter((task) => !task.isCompleted)}\n          markComplete={markComplete}\n          deleteTask={deleteTask}\n        />\n      ) : (\n        <CompletedContainer\n          tasks={tasks.filter((task) => task.isCompleted)}\n          markComplete={markComplete}\n          deleteTask={deleteTask}\n        />\n      )}\n      <Form addTask={addTask} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\PendingContainer.js",[],"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\CompletedContainer.js",[],"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\Form.js",["36"],"C:\\Users\\User\\Desktop\\kevinr108\\taskapp\\src\\components\\Task.js",["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":46,"column":14,"nodeType":"45","messageId":"46","endLine":46,"endColumn":16},{"ruleId":"43","severity":1,"message":"47","line":57,"column":49,"nodeType":"45","messageId":"46","endLine":57,"endColumn":51},{"ruleId":"48","severity":1,"message":"49","line":65,"column":7,"nodeType":"50","endLine":65,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":66,"column":7,"nodeType":"50","endLine":66,"endColumn":54},{"ruleId":"51","severity":1,"message":"52","line":82,"column":9,"nodeType":"50","endLine":86,"endColumn":10},{"ruleId":"51","severity":1,"message":"52","line":89,"column":9,"nodeType":"50","endLine":93,"endColumn":10},{"ruleId":"53","severity":1,"message":"54","line":1,"column":22,"nodeType":"55","messageId":"56","endLine":1,"endColumn":30},{"ruleId":"53","severity":1,"message":"57","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":29,"column":11,"nodeType":"50","endLine":29,"endColumn":61},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Ellipse' is defined but never used.","no-global-assign","no-unsafe-negation"]